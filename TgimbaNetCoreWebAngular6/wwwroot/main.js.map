{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div>\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class AppComponent {\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t) {\r\n\t\tthis.router.navigate(['/login']);\r\n\t}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ModuleWithProviders  } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\t  \r\nimport { HttpClientModule } from '@angular/common/http'\t  \r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { MainComponent } from './components/main/main.component';  \r\n\r\nconst routes: Routes = [\r\n\t{ path: 'login',  component: LoginComponent },\r\n\t{ path: 'registration', component: RegistrationComponent },\r\n\t{ path: 'main', component: MainComponent }\r\n];\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tLoginComponent,\r\n\t\tRegistrationComponent,\r\n\t\tMainComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule, \r\n\t\tRouterModule.forRoot(routes),\r\n\t],\t\t\r\n\tproviders: [],\r\n\tbootstrap: [AppComponent],\r\n\texports: [RouterModule]\r\n})\t\t   \r\nexport class AppModule {}\r\n","<h1>Angular 6 Type Script - Login</h1>\r\n<table width=\"100%\">\r\n    <tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Username:</label>                                             \r\n            <input type=\"text\" [(ngModel)]=\"loginUsername\" id=\"USER_CONTROL_LOGIN_USERNAME\">\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Password:</label>                        \r\n            <input type=\"password\" [(ngModel)]=\"loginPassword\" id=\"USER_CONTROL_LOGIN_PASSWORD\">\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"text-align:center\">            \r\n            <button (click)=\"Login(loginUsername, loginPassword)\" id=\"hvJsLoginBtn\">Login</button>\t \r\n            <button (click)=\"Register()\" id=\"hvJsRegisterPanelBtn\">Register</button>\r\n        </td>\r\n    </tr>\r\n</table>","ï»¿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\t\t\t\t\t \r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class LoginComponent {\t\t\r\n\tprivate baseUrl: string;\r\n\tpublic loginPassword;\r\n\tpublic loginUsername;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t\t   \r\n\t\tthis.baseUrl = window.location.protocol + \"//\"\r\n\t\t\t\t\t\t+ window.location.hostname + ':' + window.location.port; \r\n\t}\r\n\r\n\tpublic Register() {\r\n\t\tthis.router.navigate(['/registration']);\t\r\n\t}\t\t\t\t\t\t\r\n\r\n\tpublic Login(loginUsername: string, loginPassword: string) {\r\n\t\tlet encodedUserValue = btoa(loginUsername);\r\n\t\tlet encodedPassValue = btoa(loginPassword);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\tconst url = this.baseUrl + '/Home/Login?'\r\n\t\t\t+ 'encodedUser=' + encodedUserValue\r\n\t\t\t+ '&encodedPass=' + encodedPassValue;\r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.post(\r\n\t\t\turl,\r\n\t\t\tnull,\r\n\t\t\t{ headers: headers }\r\n\t\t).subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tif (data !== null && data !== undefined && data !== '') {\r\n\t\t\t\t\talert('Logged In');\r\n\t\t\t\t\tthis.router.navigate(['/main']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Username and/or password is not correct.  Please try again');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","<div style=\"text-align:center; width: 100%\">\r\n\t<p>main.html</p>\t\r\n</div>","ï»¿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\t\t\t\t\t \r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './main.component.html',\r\n\tstyleUrls: ['./main.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class MainComponent {\t\t\r\n\t//private baseUrl: string;\t \r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t\t   \r\n\t\t//this.baseUrl = window.location.protocol + \"//\"\r\n\t\t//\t\t\t\t+ window.location.hostname + ':' + window.location.port; \r\n\t}\r\n\r\n\r\n}\r\n","<h1>Angular 6 Type Script - Registration</h1>\r\n<table width=\"100%\">\r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t\r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>User Name:</label>\r\n\t\t\t<input type=\"text\" [(ngModel)]=\"username\" id=\"USER_CONTROL_REGISTRATION_USERNAME\">\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t\t\r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>Email:</label>\r\n\t\t\t<input type=\"text\" [(ngModel)]=\"email\" id=\"USER_CONTROL_REGISTRATION_EMAIL\">\r\n\t\t</td>\r\n\t</tr> \r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t  \r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>Password:</label> \r\n\t\t\t<input type=\"password\" [(ngModel)]=\"password\" id=\"USER_CONTROL_REGISTRATION_PASSWORD\">\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t \r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>Confirm Password:</label> \r\n\t\t\t<input type=\"password\" [(ngModel)]=\"confirmPassword\" id=\"USER_CONTROL_REGISTRATION_CONFIRM_PASSWORD\">\r\n        \r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\t\t\t\t\t\t\t\t\t\t\r\n        <td style=\"text-align:center\"> \r\n\t\t    <button (click)=\"Register(username, email, password, confirmPassword)\" id=\"hvJsRegisterBtn\">Register</button>\r\n            <button (click)=\"Cancel()\" id=\"hvJsRegisterCancelBtn\">Cancel</button>\t       \r\n\t\t</td>\r\n\t</tr>\r\n</table>","ï»¿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './registration.component.html',\r\n\tstyleUrls: ['./registration.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class RegistrationComponent {\r\n\tprivate baseUrl: string;\r\n\tpublic username;\r\n\tpublic email;\r\n\tpublic password;\r\n\tpublic confirmPassword;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.baseUrl = window.location.protocol + \"//\"\r\n\t\t\t+ window.location.hostname + ':' + window.location.port; \r\n\t}\t\t\t\t\r\n\r\n\tpublic Cancel() {\t\t\t\t\t\t  \r\n\t\tthis.router.navigate(['/login']);\r\n\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\tpublic Register(\r\n\t\tusername: string,\r\n\t\temail: string,\r\n\t\tpassword: string,\r\n\t\tconfirmPassword: string\r\n\t) {\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t// TODO - handle registration validation\r\n\t\tlet encodedUserValue = btoa(username);\r\n\t\tlet encodedPassValue = btoa(password);\r\n\t\tlet encodedEmailValue = btoa(email);\r\n\r\n\t\tconst url = this.baseUrl + '/Home/Registration?'\r\n\t\t\t+ 'encodedUser=' + encodedUserValue\r\n\t\t\t+ '&encodedPass=' + encodedPassValue\r\n\t\t\t+ '&encodedEmail=' + encodedEmailValue;\r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.post(\r\n\t\t\turl,\r\n\t\t\tnull,\r\n\t\t\t{ headers: headers }\r\n\t\t).subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tif (data !== null && data !== undefined && data !== '') {\r\n\t\t\t\t\talert('Registration succeeded!');\r\n\t\t\t\t\tthis.router.navigate(['/login']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Registration failed');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}