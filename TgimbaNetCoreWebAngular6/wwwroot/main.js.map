{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add/add.component.html","webpack:///./src/app/components/add/add.component.ts","webpack:///./src/app/components/common/constants.component.ts","webpack:///./src/app/components/common/session.component.ts","webpack:///./src/app/components/common/utilities.component.ts","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/edit/edit.service.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.ts","webpack:///./src/app/components/sort/sort.component.html","webpack:///./src/app/components/sort/sort.component.ts","webpack:///./src/app/components/sort/sort.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCZA,uHAAK,KACD,8lBAAe;;;;;;;;;;;;;;;;ACAnB;AAAA;AAAA;AAAA;AAAA;AAAyC;AACgC;AACL;AAEpE;IAUC,sBACS,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,OAAO,GAAG,IAAI,qFAAgB,EAAE,CAAC;QACtC,IAAI,gFAAc,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC;aACI;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjC;IACF,CAAC;IACF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAIa;AACqB;AACxB;AACA;AAIH;AAEG;AACA;AAGjE,IAAM,MAAM,GAAW;IACtB,EAAE,IAAI,EAAE,OAAO,EAAG,SAAS,EAAE,gFAAc,EAAE;IAC7C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,qGAAqB,EAAE;IAC1D,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,0EAAY,EAAE;IACxC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;CAC1C,CAAC;AAEF;IAAA;IA2BwB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCxDzB,sHAAI,wGAA2B,MAC/B,2IAAoB,KAChB,qPAAI,KACC,oJAA8B,KAC3B,yHAAO,uFAAU,MACjB;;;;;;;;;;;wBAA4E;MAAzD;;wBAAsB;MAAzC,gxCAA4E,IAGpF,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,0FAAa,MACpB;;;;;;;;;;;wBAA2F;MAAxE;;wBAAyB;MAA5C,ixCAA2F,IAGtG,wHAAI,KACI,sJAA8B,KAC3B,0HAAO,sFAAS,MACxB;;;;;wBAAmE;MAA3D;;wBAAsB;MAA9B,gtCAAmE,IAClE,gzBAAoB,+EAAG,MACvB,20BAAyC,gFAAI,MAC7C,izBAAqB,gFAAI,MAI1B,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,uFAAU,MAC1B;;;;;wBAAyG;MAAlF;;wBAAuB;MAA9C,otCAAyG,IAG3G,uHAAI,KACI,qJAA8B,KAC3B,0HAAO,sFAAS,MAChB;;;;;;;;;;;wBAA2E;MAAxD;;wBAAsB;MAAzC,ixCAA2E,IAGnF,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,uFAAU,MACjB;;;;;;;;;;;wBAA6E;MAA1D;;wBAAuB;MAA1C,ixCAA6E,IAGrF,uHAAI,KACA,qJAA8B,KAC1B,yMAA6G,YAArG;;wBAA8E;MAAtF,wBAA6G,gFAAG,MACzH,0MAAmD,YAA3C;;wBAAkB;MAA1B,wBAAmD,mFAAM,mDAxC7B,mBAAsB,WAAzC,aAA4E,EAAzD,SAAsB,GAMtB,oBAAyB,cAA5C,aAA2F,EAAxE,UAAyB,GAM5C,oBAAsB,WAA9B,aAAmE,EAA3D,UAAsB,GACrB,sBAAW,EAAnB,aAAoB,EAAZ,mCAAW,EAAnB,aAAoB,EAAZ,UAAW,GACX,uBAAY,EAApB,aAAyC,EAAjC,oCAAY,EAApB,aAAyC,EAAjC,UAAY,GACZ,uBAAY,EAApB,aAAqB,EAAb,oCAAY,EAApB,aAAqB,EAAb,UAAY,GAOC,oBAAuB,YAA9C,aAAyG,EAAlF,UAAuB,GAMlB,oBAAsB,WAAzC,aAA2E,EAAxD,UAAsB,GAMtB,oBAAuB,YAA1C,aAA6E,EAA1D,UAAuB,2BAlC1C,qtBAA4E,GAM5E,guBAA2F,GAMnG,ouBAAmE,GAUpE,ouBAAyG,GAMhG,ouBAA2E,GAM3E,ouBAA6E;;;;;;;;;;;;;;;;ACtCzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACtB;AAE0B;AACJ;AACI;AAEnE;IAgBC,sBACS,IAAgB,EAChB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAThB,aAAQ,GAAG,EAAE,CAAC;QAEd,aAAQ,GAAG,MAAM,CAAC;QAClB,cAAS,GAAG,SAAS,CAAC;QACtB,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QAMrB,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;QAE/C,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAEM,6BAAM,GAAb;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAEM,0BAAG,GAAV,UACI,QAAgB,EACnB,WAAmB,EACnB,QAAgB,EAChB,SAAiB,EACjB,QAAgB,EAChB,SAAiB;QANlB,iBA4CC;QApCA,IAAI,QAAQ,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,gBAAgB,CAAC,CAAC;QACrF,IAAI,KAAK,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,aAAa,CAAC,CAAC;QAE/E,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,oCAAoC;cAC5D,OAAO,GAAG,QAAQ;cAClB,eAAe,GAAG,WAAW;cAC7B,sBAAsB,GAAG,QAAQ;cACjC,aAAa,GAAG,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;cAChE,YAAY,GAAG,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;cAC1D,aAAa,GAAG,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE;cAC7D,cAAc,GAAG,EAAE;cACnB,YAAY,GAAG,QAAQ;cACvB,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;cAChC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC/B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,EACH,IAAI,EACJ,EAAE,OAAO,EAAE,OAAO,EAAE,CACpB,CAAC,SAAS,CACV,cAAI;YACH,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;gBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAChC;iBAAM;gBACN,sBAAsB;gBACtB,KAAK,CAAC,YAAY,CAAC,CAAC;aACpB;QACF,CAAC,EACD,eAAK;YACJ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC1B,CAAC,CACD,CAAC;IACH,CAAC;IACF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC/ED;AAAA;AAAA;IAAA;IAUA,CAAC;IAFA,sBAAkB,mCAAa;aAA/B,cAA4C,OAAO,cAAc,CAAC,CAAC,CAAC;;;OAAA;IACpE,sBAAkB,sCAAgB;aAAlC,cAA+C,OAAO,iBAAiB,CAAC,CAAC,CAAC;;;OAAA;IAC3E,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IASC;IAAe,CAAC;IAEhB,+DAA+D;IACjD,gCAAe,GAA7B,UAA8B,GAAG,EAAE,KAAK;QACvC,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IAEa,gCAAe,GAA7B,UAA8B,GAAG;QAChC,IAAI,GAAG,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtC,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,+DAA+D;IACjD,oCAAmB,GAAjC;QACC,gBAAgB,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7C,CAAC;IAjBc,+BAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IAkB3C,uBAAC;CAAA;AAnB4B;;;;;;;;;;;;;ACR7B;AAAA;AAAA;IAAA;IAaA,CAAC;IANc,6BAAU,GAAxB;QACC,IAAI,OAAO,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI;cAClD,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEzD,OAAO,OAAO,CAAC;IAChB,CAAC;IACF,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCfD,sHAAI,yGAA4B,MAChC,2IAAoB,KAChB,qPAAI,KACC,oJAA8B,KAC3B,yHAAO,uFAAU,MACjB;;;;;;;;;;;wBAA6E;MAA1D;;wBAAsB;MAAzC,gxCAA6E,IAGrF,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,0FAAa,MACpB;;;;;;;;;;;wBAA4F;MAAzE;;wBAAyB;MAA5C,ixCAA4F,IAGvG,wHAAI,KACI,sJAA8B,KAC3B,0HAAO,sFAAS,MACxB;;;;;wBAAoE;MAA5D;;wBAAsB;MAA9B,gtCAAoE,IACnE,gzBAAoB,+EAAG,MACvB,20BAAyC,gFAAI,MAC7C,izBAAqB,gFAAI,MAI1B,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,uFAAU,MAC1B;;;;;wBAA0G;MAAnF;;wBAAuB;MAA9C,otCAA0G,IAG5G,uHAAI,KACI,qJAA8B,KAC3B,0HAAO,sFAAS,MAChB;;;;;;;;;;;wBAA4E;MAAzD;;wBAAsB;MAAzC,ixCAA4E,IAGpF,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,uFAAU,MACjB;;;;;;;;;;;wBAA8E;MAA3D;;wBAAuB;MAA1C,ixCAA8E,IAGtF,uHAAI,KACA,qJAA8B,KACnC,0MAAgD,YAAxC;;wBAAgB;MAAxB,wBAAgD,iFAAI,MACpD,2MAAoD,YAA5C;;wBAAkB;MAA1B,wBAAoD,mFAAM,MAK7D;;;;;;;;;;;wBAA6E;MAAxD;;wBAAkB;MAAvC,ixCAA6E,IAC7E;;;;;;;;;;;wBAA0F;MAArE;;wBAA2B;MAAhD,ixCAA0F,iDA9C3D,mBAAsB,WAAzC,aAA6E,EAA1D,SAAsB,GAMtB,oBAAyB,cAA5C,aAA4F,EAAzE,UAAyB,GAM5C,oBAAsB,WAA9B,aAAoE,EAA5D,UAAsB,GACrB,sBAAW,EAAnB,aAAoB,EAAZ,mCAAW,EAAnB,aAAoB,EAAZ,UAAW,GACX,uBAAY,EAApB,aAAyC,EAAjC,oCAAY,EAApB,aAAyC,EAAjC,UAAY,GACZ,uBAAY,EAApB,aAAqB,EAAb,oCAAY,EAApB,aAAqB,EAAb,UAAY,GAOC,oBAAuB,YAA9C,aAA0G,EAAnF,UAAuB,GAMlB,oBAAsB,WAAzC,aAA4E,EAAzD,UAAsB,GAMtB,oBAAuB,YAA1C,aAA8E,EAA3D,UAAuB,GAWjC,oBAAkB,OAAvC,aAA6E,EAAxD,UAAkB,GAClB,oBAA2B,gBAAhD,aAA0F,EAArE,UAA2B,2BA9CpC,qtBAA6E,GAM7E,guBAA4F,GAMpG,ouBAAoE,GAUrE,ouBAA0G,GAMjG,ouBAA4E,GAM5E,ouBAA8E,GAW1F,ouBAA6E,GAC7E,ouBAA0F;;;;;;;;;;;;;;;;AClD1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACE;AAEE;AACJ;AACI;AACtB;AAE7C;IAkBC,uBACS,IAAgB,EAChB,MAAc,EACd,KAAqB,EACrB,WAAwB;QAHxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAb1B,aAAQ,GAAG,EAAE,CAAC;QAEd,aAAQ,GAAG,MAAM,CAAC;QAClB,cAAS,GAAG,SAAS,CAAC;QACtB,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QACf,SAAI,GAAG,EAAE,CAAC;QACV,kBAAa,GAAG,EAAE,CAAC;QAQzB,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;QAC/C,IAAI,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAEO,+BAAO,GAAf,UAAgB,cAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC;QAE7C,sCAAsC;QACtC,IAAI,cAAc,CAAC,kBAAkB,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,eAAc;SACpC;aAAM,IAAI,cAAc,CAAC,kBAAkB,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAU;SACjC;aAAM;YACN,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,gBAAe;SACtC;IACF,CAAC;IAEM,8BAAM,GAAb;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAEM,4BAAI,GAAX;QAAA,iBAqCC;QApCA,IAAI,QAAQ,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,gBAAgB,CAAC,CAAC;QACrF,IAAI,KAAK,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,aAAa,CAAC,CAAC;QAE/E,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,qCAAqC;cAC7D,OAAO,GAAG,IAAI,CAAC,QAAQ;cACvB,eAAe,GAAG,IAAI,CAAC,WAAW;cAClC,sBAAsB,GAAG,IAAI,CAAC,QAAQ;cACtC,aAAa,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE;cAC3C,YAAY,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;cACpE,aAAa,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE;cACvE,cAAc,GAAG,IAAI,CAAC,IAAI;cAC1B,YAAY,GAAG,IAAI,CAAC,aAAa;cACjC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;cAChC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC/B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,EACH,IAAI,EACJ,EAAE,OAAO,EAAE,OAAO,EAAE,CACpB,CAAC,SAAS,CACV,cAAI;YACH,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;gBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAChC;iBAAM;gBACN,sBAAsB;gBACtB,KAAK,CAAC,aAAa,CAAC,CAAC;aACrB;QACF,CAAC,EACD,eAAK;YACJ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC1B,CAAC,CACD,CAAC;IACH,CAAC;IACF,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACjGD;IAMC;QACC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC1B,CAAC;IACD,uCAAiB,GAAjB,UAAkB,cAAmB;QACpC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACtC,CAAC;IACD,uCAAiB,GAAjB;QACC,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC;;sBAhBF;CAiBC;AAZuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCLxB,sHAAI,0GAA6B,MACjC,2IAAoB,KAChB,qPAAI,KACC,oJAA8B,KAC3B,yHAAO,sFAAS,MAChB;;;;;;;;;;;wBAAgF;MAA7D;;wBAA2B;MAA9C,gxCAAgF,IAGxF,uHAAI,KACA,sKAA+C,KAC3C,0HAAO,sFAAS,MAChB;;;;;;;;;;;wBAAoF;MAA7D;;wBAA2B;MAAlD,ixCAAoF,IAG5F,uHAAI,KACA,qJAA8B,KAC1B,qMAAwE,YAAhE;;wBAA6C;MAArD,wBAAwE,kFAAK,MAC7E,6MAAuD,YAA/C;;wBAAoB;MAA5B,wBAAuD,qFAAQ,mDAZ5C,mBAA2B,gBAA9C,aAAgF,EAA7D,SAA2B,GAMvB,oBAA2B,gBAAlD,aAAoF,EAA7D,UAA2B,2BANlD,qtBAAgF,GAMhF,guBAAoF;;;;;;;;;;;;;;;;ACVhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACtB;AAE0B;AACJ;AACI;AAEnE;IAYC,wBACS,IAAgB,EAChB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;IAEa,yBAAU,GAAxB;QACC,IAAI,KAAK,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,aAAa,CAAC,CAAC;QAE/E,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9D,OAAO,IAAI,CAAC;SACZ;aACI;YACJ,OAAO,KAAK,CAAC;SACb;IACF,CAAC;IAEM,iCAAQ,GAAf;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IACzC,CAAC;IAEM,8BAAK,GAAZ,UAAa,aAAqB,EAAE,aAAqB;QAAzD,iBA+BC;QA9BA,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3C,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3C,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe;cACvC,cAAc,GAAG,gBAAgB;cACjC,eAAe,GAAG,gBAAgB,CAAC;QAEtC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC/B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,EACH,IAAI,EACJ,EAAE,OAAO,EAAE,OAAO,EAAE,CACpB,CAAC,SAAS,CACV,cAAI;YACH,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,EAAE,EAAE;gBACvD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACjC,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAC1E,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;gBACrF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAChC;iBAAM;gBACN,KAAK,CAAC,4DAA4D,CAAC,CAAC;aACpE;QACF,CAAC,EACD,eAAK;YACJ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC1B,CAAC,CACD,CAAC;IACH,CAAC;IACF,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCvEA,iJAAwE,KACvE,yIAAkB,KACjB,sPAAI,KACD,sHAAI,gFAAyB,MAC7B,sHAAI,sFAA6B,MACjC,sHAAI,6FAA2C,MAC/C,uHAAI,qGAAyD,MAC7D,uHAAI,4FAAuC,MAC3C,uHAAI,2FAAqC,MACzC,uHAAI,4FAAuC,MAC3C,uHAAI,2FAAqC,MACzC,uHAAI,4FAAuC,MAC3C,uHAAI,uFAAmC,MACvC,uHAAI,2FAAqC,MACzC,uHAAI,KACF,wMAAgE,YAAxD;;wBAAkC;MAA1C,wBAAgE,iFAAI,MAEtE,uHAAI,KACH,0MAA+E,YAAvE;;wBAA+C;MAAvD,wBAA+E,mFAAM,iCAflF,oEAAyB,GACzB,kEAA6B,GAC7B,yEAA2C,GAC3C,iFAAyD,GACzD,wEAAuC,GACvC,uEAAqC,GACrC,wEAAuC,GACvC,uEAAqC,GACrC,wEAAuC,GACvC,yEAAmC,GACnC,yEAAqC;mGAhB/C,sHAAI,yGAA4B,MAChC,kKAA4C,KAC3C,mMAAkD,YAA1C;;wBAAwB;MAAhC,wBAAkD,iFAAI,MACtD,+cAAwE,iDAAnE,mBAA6C,iBAAlD,YAAwE,EAAnE,SAA6C;;;;;;;;;;;;;;;;ACFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACI;AAC1B;AACsB;AACI;AAChB;AACA;AAEnD;IAWC,uBACS,IAAgB,EAChB,MAAc,EACd,WAAwB,EACxB,WAAwB;QAHxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;QAC/C,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC5B,CAAC;IAEM,gCAAQ,GAAf,UAAgB,cAAc;QAC7B,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEK,kCAAU,GAAjB,UAAkB,UAAU;QAA5B,iBAwBC;QAvBA,IAAI,QAAQ,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,gBAAgB,CAAC,CAAC;QACrF,IAAI,KAAK,GAAG,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,aAAa,CAAC,CAAC;QAE/E,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,uCAAuC;cAC/D,OAAO,GAAG,UAAU;cACpB,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;cAChC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;aAC1B,SAAS,CACV,cAAI;YACH,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;gBAC1B,KAAI,CAAC,mBAAmB,EAAE,CAAC;aAC3B;iBAAM;gBACN,sBAAsB;gBACtB,KAAK,CAAC,eAAe,CAAC,CAAC;aACvB;QACF,CAAC,EACD,eAAK;YACJ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC1B,CAAC,CACD,CAAC;IAEH,CAAC;IAAA,CAAC;IAEK,oCAAY,GAAnB;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAEO,2CAAmB,GAA3B;QAAA,iBAoBC;QAnBA,IAAI,eAAe,GAAG,IAAI,CAAC,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAClG,IAAI,YAAY,GAAG,IAAI,CAAC,0EAAgB,CAAC,eAAe,CAAC,8EAAkB,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5F,IAAI,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QAEzD,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,qCAAqC;cAC7D,kBAAkB,GAAG,eAAe;cACpC,uBAAuB,GAAG,iBAAiB;cAC3C,gBAAgB,GAAG,YAAY,CAAC;QAEnC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC/B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAClC,yBAAe;YACd,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;YACxD,KAAI,CAAC,cAAc,GAAG,eAAe,CAAC;QACvC,CAAC,CACD,CAAC;IACH,CAAC;IAEO,uCAAe,GAAvB,UAAwB,cAAc;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;SACjC;QAED,OAAO,cAAc,CAAC;IACvB,CAAC;IACF,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGC9FD,sHAAI,yGAA4B,MAChC,2IAAoB,KAChB,qPAAI,KACA,oJAA8B,KACnC,gNAAoE,YAA5D;;wBAA6B;MAArC,wBAAoE,gFAAG,MAGtE,sHAAI,KACA,oJAA8B,KACnC,kNAAsE,YAA9D;;wBAA8B;MAAtC,wBAAsE,iFAAI,MAGzE,uHAAI,KACA,qJAA8B,KACnC,4MAA0D,YAAlD;;wBAAwB;MAAhC,wBAA0D,0FAAa,MAGtE,uHAAI,KACA,qJAA8B,KACnC,sMAA8C,YAAtC;;wBAAkB;MAA1B,wBAA8C,mFAAM,MAGnD,uHAAI,KACA,qJAA8B,KACnC,sMAA8C,YAAtC;;wBAAkB;MAA1B,wBAA8C,mFAAM;;;;;;;;;;;;;;;;ACvBvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACtB;AACiB;AACK;AACI;AAEnE;IAUC,uBACS,IAAgB,EAChB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;IAEM,yCAAiB,GAAxB;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAChC,CAAC;IAAA,CAAC;IAEK,0CAAkB,GAAzB;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEK,oCAAY,GAAnB;QACC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEK,8BAAM,GAAb;QACC,0EAAgB,CAAC,mBAAmB,EAAE,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC;IAAA,CAAC;IAEK,8BAAM,GAAb;QACC,IAAI,qEAAc,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC;aACI;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjC;IACF,CAAC;IAAA,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GCjDD,sHAAI,iHAAoC,MACxC,2IAAoB,KACnB,qPAAI,KACG,oJAA8B,KACnC,yHAAO,uFAAU,MACjB;;;;;;;;;;;wBAAkF;MAA/D;;wBAAsB;MAAzC,gxCAAkF,IAGpF,uHAAI,KACG,qJAA8B,KACnC,0HAAO,mFAAM,MACb;;;;;;;;;;;wBAA4E;MAAzD;;wBAAmB;MAAtC,ixCAA4E,IAG9E,uHAAI,KACG,qJAA8B,KACnC,0HAAO,sFAAS,MAChB;;;;;;;;;;;wBAAsF;MAA/D;;wBAAsB;MAA7C,ixCAAsF,IAGxF,uHAAI,KACG,qJAA8B,KACnC,0HAAO,8FAAiB,MACxB;;;;;;;;;;;wBAAqG;MAA9E;;wBAA6B;MAApD,ixCAAqG,IAIvG,uHAAI,KACG,qJAA8B,KAChC,wMAA4F,YAApF;;wBAA8D;MAAtE,wBAA4F,qFAAQ,MAC9F,8MAAsD,YAA9C;;wBAAkB;MAA1B,wBAAsD,mFAAM,mDAzBlD,mBAAsB,WAAzC,aAAkF,EAA/D,SAAsB,GAMtB,oBAAmB,QAAtC,aAA4E,EAAzD,UAAmB,GAMf,oBAAsB,WAA7C,aAAsF,EAA/D,UAAsB,GAMtB,oBAA6B,kBAApD,aAAqG,EAA9E,UAA6B,2BAlBpD,qtBAAkF,GAMlF,guBAA4E,GAM5E,ouBAAsF,GAMtF,ouBAAqG;;;;;;;;;;;;;;;;ACtBxG;AAAA;AAAA;AAAA;AAAA;AAA+D;AACtB;AAC0B;AAEnE;IAcC,+BACS,IAAgB,EAChB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;IAEM,sCAAM,GAAb;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC;IAEM,wCAAQ,GAAf,UACC,QAAgB,EAChB,KAAa,EACb,QAAgB,EAChB,eAAuB;QAJxB,iBAoCC;QA9BA,wCAAwC;QACxC,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAEpC,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,6BAA6B;cACrD,cAAc,GAAG,gBAAgB;cACjC,eAAe,GAAG,gBAAgB;cAClC,gBAAgB,GAAG,iBAAiB,CAAC;QAExC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC/B,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACpB,GAAG,EACH,IAAI,EACJ,EAAE,OAAO,EAAE,OAAO,EAAE,CACpB,CAAC,SAAS,CACV,cAAI;YACH,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,EAAE,EAAE;gBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACN,KAAK,CAAC,qBAAqB,CAAC,CAAC;aAC7B;QACF,CAAC,EACD,eAAK;YACJ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC1B,CAAC,CACD,CAAC;IACH,CAAC;IACF,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCnED,2IAAoB,KAChB,qPAAI,KACA,oJAA8B,KACnC,uMAA4D,YAApD;;wBAA8B;MAAtC,wBAA4D,iFAAI,MAGlE,sHAAI,KACG,oJAA8B,KACnC,0MAA0D,YAAlD;;wBAAyB;MAAjC,wBAA0D,oFAAO,MAGnE,uHAAI,KACG,qJAA8B,KACnC,4MAA4D,YAApD;;wBAA0B;MAAlC,wBAA4D,qFAAQ,MAGtE,uHAAI,KACG,qJAA8B,KACnC,4MAA4D,YAApD;;wBAA0B;MAAlC,wBAA4D,qFAAQ,MAGtE,uHAAI,KACH,sKAA+C,KACrC,0HAAO,uFAAU,MAC1B;;;;;wBAAqE;MAA9C;;wBAAuB;MAA9C,otCAAqE,IAGpE,uHAAI,KACA,qJAA8B,KACnC,sMAA8C,YAAtC;;wBAAkB;MAA1B,wBAA8C,mFAAM,mDAL7B,mBAAuB,YAA9C,aAAqE,EAA9C,SAAuB,2BAA9C,stBAAqE;;;;;;;;;;;;;;;;ACvBxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACtB;AACiB;AAES;AACtB;AAE7C;IAWC,uBACS,IAAgB,EAChB,MAAc,EACd,WAAwB;QAFxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,OAAO,GAAG,8EAAkB,CAAC,UAAU,EAAE,CAAC;IAChD,CAAC;IAEM,4BAAI,GAAX,UAAY,UAAU;QACrB,IAAI,IAAI,GAAG,WAAW,GAAG,UAAU,CAAC;QAEpC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YAC5B,IAAI,IAAI,OAAO,CAAC;SAChB;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEK,8BAAM,GAAb;QACC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAE7B,IAAI,qEAAc,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC;aACI;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjC;IACF,CAAC;IAAA,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;AC9CD;IAMC;QACC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IAChB,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAY;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,6BAAO,GAAP;QACC,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;;sBAlBF;CAmBC;AAduB;;;;;;;;;;;;;ACLxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div>\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionComponent } from './components/common/session.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class AppComponent {\r\n\tpublic session: SessionComponent;\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t) {\r\n\t\tthis.session = new SessionComponent(); \r\n\t\tif (LoginComponent.IsLoggedIn() === true) {\r\n\t\t\tthis.router.navigate(['/main']);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t}\t\t\t\t\t\t\t\t\t  \r\n\t}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ModuleWithProviders  } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\t  \r\nimport { HttpClientModule } from '@angular/common/http'\t  \r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { MainComponent } from './components/main/main.component';  \r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { SessionComponent } from './components/common/session.component';\r\nimport { ConstantsComponent } from './components/common/constants.component';\r\nimport { UtilitiesComponent } from './components/common/utilities.component';\r\nimport { AddComponent } from './components/add/add.component';\r\nimport { EditService } from './components/edit/edit.service';\r\nimport { EditComponent } from './components/edit/edit.component';\r\nimport { SortComponent } from './components/sort/sort.component';\r\nimport { SortService } from './components/sort/sort.service';\r\n\r\nconst routes: Routes = [\r\n\t{ path: 'login',  component: LoginComponent },\r\n\t{ path: 'registration', component: RegistrationComponent },\r\n\t{ path: 'main', component: MainComponent },\r\n\t{ path: 'menu', component: MenuComponent },\r\n\t{ path: 'add', component: AddComponent },\r\n\t{ path: 'edit', component: EditComponent },\t\r\n\t{ path: 'sort', component: SortComponent }\r\n];\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tLoginComponent,\r\n\t\tRegistrationComponent,\r\n\t\tMainComponent,\r\n\t\tMenuComponent,\r\n\t\tSessionComponent,\r\n\t\tConstantsComponent,\r\n\t\tUtilitiesComponent,\r\n\t\tAddComponent,\r\n\t\tEditComponent, \r\n\t\tSortComponent\t\t\t  \r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule, \r\n\t\tRouterModule.forRoot(routes),\r\n\t],\t\t\r\n\tproviders: [\r\n\t\tEditService,\r\n\t\tSortService\r\n\t],\r\n\tbootstrap: [AppComponent],\r\n\texports: [RouterModule]\r\n})\t\t   \r\nexport class AppModule {}\r\n","<h1>Angular 6 Type Script - Add</h1>\r\n<table width=\"100%\">\r\n    <tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Item Name:</label>\r\n            <input type=\"text\" [(ngModel)]=\"itemName\" id=\"USER_CONTROL_ADD_ITEM_NAME\" />\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Date Created:</label>\r\n            <input type=\"text\" [(ngModel)]=\"dateCreated\" id=\"USER_CONTROL_ADD_DATE_CREATED\" readonly />\r\n        </td>\r\n    </tr>\t\t   \r\n\t<tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Category:</label>\r\n\t\t\t <select [(ngModel)]=\"category\" id=\"USER_CONTROL_ADD_ITEM_CATEGORY\">\r\n\t\t\t  <option value=\"Hot\">Hot</option>\r\n\t\t\t  <option value=\"Warm\" selected=\"selected\">Warm</option>\r\n\t\t\t  <option value=\"Cool\">Cool</option>\r\n\t\t\t</select>\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Completed:</label>\r\n\t\t\t<input type=\"checkbox\" [(ngModel)]=\"completed\" id=\"USER_CONTROL_ADD_COMPLETED\" value=\"Completed\" checked>\r\n        </td>\r\n    </tr>  \t \r\n\t<tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Latitude:</label>\r\n            <input type=\"text\" [(ngModel)]=\"latitude\" id=\"USER_CONTROL_ADD_LATITUDE\" />\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Longitude:</label>\r\n            <input type=\"text\" [(ngModel)]=\"longitude\" id=\"USER_CONTROL_ADD_LONGITUDE\" />\r\n        </td>\r\n    </tr>  \r\n    <tr>\r\n        <td style=\"text-align:center\">\r\n            <button (click)=\"Add(itemName, dateCreated, category, completed, latitude, longitude)\" id=\"hvJsAddSubmitBtn\">Add</button>\r\n\t\t\t<button (click)=\"Cancel()\"  id=\"hvJsAddCancellBtn\">Cancel</button>\r\n        </td>\r\n    </tr>\r\n</table>","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\t\t\t\t\t \r\nimport { Session } from 'protractor';\r\nimport { ConstantsComponent } from '../common/constants.component';\r\nimport { SessionComponent } from '../common/session.component';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './add.component.html',\r\n\tstyleUrls: ['./add.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class AddComponent {\t\t\r\n\tprivate baseUrl: string;\r\n\tpublic itemName = '';\r\n\tpublic dateCreated;\r\n\tpublic category = 'Warm';\r\n\tpublic completed = undefined;\r\n\tpublic latitude = '';\r\n\tpublic longitude = '';\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n\t\tvar today = new Date();\r\n\t\tthis.dateCreated = today.toLocaleDateString('en-US');\r\n\t}\t\r\n\r\n\tpublic Cancel() {\r\n\t\tthis.router.navigate(['/main']);\r\n\t}\t\t\t\t\t\t\r\n\r\n\tpublic Add(\r\n\t    itemName: string,\r\n\t\tdateCreated: string,\r\n\t\tcategory: string,\r\n\t\tcompleted: string,\r\n\t\tlatitude: string,\r\n\t\tlongitude: string\r\n\t) {\r\n\t\tlet userName = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_USERNAME);\r\n\t\tlet token = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_TOKEN);\t\t   \r\n\r\n\t\tconst url = this.baseUrl + '/BucketListItem/AddBucketListItem?'\r\n\t\t\t+ 'Name=' + itemName\r\n\t\t\t+ '&DateCreated=' + dateCreated\r\n\t\t\t+ '&BucketListItemType=' + category\r\n\t\t\t+ '&Completed=' + (completed === 'true' ? true : false).toString()\r\n\t\t\t+ '&Latitude=' + (latitude === '' ? 0 : latitude).toString()\r\n\t\t\t+ '&Longitude=' + (longitude === '' ? 0 : longitude).toString()\r\n\t\t\t+ '&DatabaseId=' + ''\r\n\t\t\t+ '&UserName=' + userName\r\n\t\t\t+ '&encodedUser=' + btoa(userName)\r\n\t\t\t+ '&encodedToken=' + btoa(token);\t\t\t\t\t\t\t\t\t  \r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.post(\r\n\t\t\turl,\r\n\t\t\tnull,\r\n\t\t\t{ headers: headers }\t\t\t\t\t\t\t\t\t\t  \r\n\t\t).subscribe(\r\n\t\t\tdata => {\t\t\t\t\t\t\t\t  \r\n\t\t\t\tif (data && data === true) {\r\n\t\t\t\t\tthis.router.navigate(['/main']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO - handle error\r\n\t\t\t\t\talert('Add failed');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\t\t\t\t\t \r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './emptyHtml/constants.component.html',\r\n\t//styleUrls: ['./constants.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class ConstantsComponent {\t\t\t\t   \r\n\tpublic static get SESSION_TOKEN(): string { return \"SessionToken\"; }\r\n\tpublic static get SESSION_USERNAME(): string { return \"SessionUserName\"; }\t\t\t\t \r\n}\r\n","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\t\t\t\t\t \r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './emptyHtml/session.component.html'\r\n})\r\n\r\n@Injectable()\r\nexport class SessionComponent {\t\t\r\n\tprivate static sessionStorage = new Map();\r\n\r\n\tconstructor() {}\r\n\r\n\t//token -------------------------------------------------------\r\n\tpublic static SessionSetValue(key, value) {\r\n\t\tsessionStorage.setItem(key, value);\r\n\t}\r\n\r\n\tpublic static SessionGetValue(key) {\r\n\t\tvar val = sessionStorage.getItem(key);\r\n\t\treturn val;\r\n\t}\r\n\r\n\t//misc --------------------------------------------------------\r\n\tpublic static SessionClearStorage() {\r\n\t\tSessionComponent.sessionStorage = new Map();\r\n\t}\r\n}\r\n","﻿import { Injectable, Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './emptyHtml/utilities.component.html',\r\n})\r\n\r\n@Injectable()\r\nexport class UtilitiesComponent {\r\n\tpublic static GetBaseUrl() {\r\n\t\tlet baseUrl: string = window.location.protocol + \"//\"\r\n\t\t\t+ window.location.hostname + ':' + window.location.port; \r\n\r\n\t\treturn baseUrl;\r\n\t}\r\n}","<h1>Angular 6 Type Script - Edit</h1>\r\n<table width=\"100%\">\r\n    <tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Item Name:</label>\r\n            <input type=\"text\" [(ngModel)]=\"itemName\" id=\"USER_CONTROL_EDIT_ITEM_NAME\" />\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Date Created:</label>\r\n            <input type=\"text\" [(ngModel)]=\"dateCreated\" id=\"USER_CONTROL_EDIT_DATE_CREATED\" readonly />\r\n        </td>\r\n    </tr>\t\t   \r\n\t<tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Category:</label>\r\n\t\t\t <select [(ngModel)]=\"category\" id=\"USER_CONTROL_EDIT_ITEM_CATEGORY\">\r\n\t\t\t  <option value=\"Hot\">Hot</option>\r\n\t\t\t  <option value=\"Warm\" selected=\"selected\">Warm</option>\r\n\t\t\t  <option value=\"Cool\">Cool</option>\r\n\t\t\t</select>\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Completed:</label>\r\n\t\t\t<input type=\"checkbox\" [(ngModel)]=\"completed\" id=\"USER_CONTROL_EDIT_COMPLETED\" value=\"Completed\" checked>\r\n        </td>\r\n    </tr>  \t \r\n\t<tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Latitude:</label>\r\n            <input type=\"text\" [(ngModel)]=\"latitude\" id=\"USER_CONTROL_EDIT_LATITUDE\" />\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Longitude:</label>\r\n            <input type=\"text\" [(ngModel)]=\"longitude\" id=\"USER_CONTROL_EDIT_LONGITUDE\" />\r\n        </td>\r\n    </tr>  \r\n    <tr>\r\n        <td style=\"text-align:center\">\r\n\t\t\t<button (click)=\"Edit()\" id=\"hvJsEditSubmitBtn\">Edit</button>\r\n\t\t\t<button (click)=\"Cancel()\"  id=\"hvJsEditCancellBtn\">Cancel</button>\r\n        </td>\r\n    </tr>\r\n</table>\t\t\t\t\t\t\t\t   \r\n\r\n<input type=\"hidden\" [(ngModel)]=\"dbId\" id=\"USER_CONTROL_EDIT_DBID\" value=\"\">\r\n<input type=\"hidden\" [(ngModel)]=\"userNameParam\" id=\"USER_CONTROL_EDIT_USERNAME\" value=\"\">\r\n\r\n","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router'; \t\t\t \r\nimport { Session } from 'protractor';\r\nimport { ConstantsComponent } from '../common/constants.component';\r\nimport { SessionComponent } from '../common/session.component';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\nimport { EditService } from './edit.service';\r\n\r\n@Component({\r\n\tselector: 'app-edit-component',\r\n\ttemplateUrl: './edit.component.html',\r\n\tstyleUrls: ['./edit.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class EditComponent {\t\t\r\n\tprivate baseUrl: string;\r\n\tpublic itemName = '';\r\n\tpublic dateCreated;\r\n\tpublic category = 'Warm';\r\n\tpublic completed = undefined;\r\n\tpublic latitude = '';\r\n\tpublic longitude = '';\r\n\tpublic dbId = '';\r\n\tpublic userNameParam = '';\t\t   \r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router, \r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate editService: EditService\r\n\t) {\r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl();\r\n\t\tlet bucketListItem = this.editService.getBucketListItem();\r\n\t\tthis.Display(bucketListItem);\t\t\r\n\t}\t\r\n\t\t  \r\n\tprivate Display(bucketListItem: any) {\t\t\r\n\t\tthis.itemName = bucketListItem.name;\r\n\t\tthis.dateCreated = bucketListItem.dateCreated;\r\n\t\tthis.completed = bucketListItem.completed;\r\n\t\tthis.latitude = bucketListItem.latitude;\r\n\t\tthis.longitude = bucketListItem.longitude;\r\n\t\tthis.dbId = bucketListItem.databaseId;\r\n\t\tthis.userNameParam = bucketListItem.userName;\t\r\n\r\n\t\t//3 hot, 2 warm, 1 cold, 0 cool\t\t\t\t\t\t \r\n\t\tif (bucketListItem.bucketListItemType === 3) {\r\n\t\t\tthis.category = 'Hot';// = 0;\t\t//hot\r\n\t\t} else if (bucketListItem.bucketListItemType === 2) {\r\n\t\t\tthis.category = 'Warm';//\t\t//warm\r\n\t\t} else {\r\n\t\t\tthis.category = 'Cool';//\t\t//cool/cold\r\n\t\t}\t\r\n\t}\r\n\r\n\tpublic Cancel() {\r\n\t\tthis.router.navigate(['/main']);\r\n\t}\t\t\t\t\t\t\r\n\r\n\tpublic Edit() {\r\n\t\tlet userName = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_USERNAME);\r\n\t\tlet token = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_TOKEN);\t\r\n\r\n\t\tconst url = this.baseUrl + '/BucketListItem/EditBucketListItem?'\r\n\t\t\t+ 'Name=' + this.itemName\r\n\t\t\t+ '&DateCreated=' + this.dateCreated\r\n\t\t\t+ '&BucketListItemType=' + this.category\r\n\t\t\t+ '&Completed=' + (this.completed).toString()\r\n\t\t\t+ '&Latitude=' + (this.latitude === '' ? 0 : this.latitude).toString()\r\n\t\t\t+ '&Longitude=' + (this.longitude === '' ? 0 : this.longitude).toString()\r\n\t\t\t+ '&DatabaseId=' + this.dbId\r\n\t\t\t+ '&UserName=' + this.userNameParam\r\n\t\t\t+ '&encodedUser=' + btoa(userName)\r\n\t\t\t+ '&encodedToken=' + btoa(token);\t\t\t\t\t\t\t\t\t  \r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.post(\r\n\t\t\turl,\r\n\t\t\tnull,\r\n\t\t\t{ headers: headers }\t\t\t\t\t\t\t\t\t\t  \r\n\t\t).subscribe(\r\n\t\t\tdata => {\t\t\t\t\t\t\t\t  \r\n\t\t\t\tif (data && data === true) {\r\n\t\t\t\t\tthis.router.navigate(['/main']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO - handle error\r\n\t\t\t\t\talert('Edit failed');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","﻿import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class EditService {\r\n\tpublic bucketListItem: any;\r\n\r\n\tconstructor() {\r\n\t\tthis.bucketListItem = {};\r\n\t}\r\n\tsetBucketListItem(bucketListItem: any) {\r\n\t\tthis.bucketListItem = bucketListItem;\r\n\t}\r\n\tgetBucketListItem() {\r\n\t\treturn this.bucketListItem;\r\n\t}\r\n}","<h1>Angular 6 Type Script - Login</h1>\r\n<table width=\"100%\">\r\n    <tr>                   \r\n         <td style=\"text-align:center\">         \r\n            <label>Username:</label>                                             \r\n            <input type=\"text\" [(ngModel)]=\"loginUsername\" id=\"USER_CONTROL_LOGIN_USERNAME\">\r\n        </td>\r\n    </tr>\r\n    <tr>      \r\n        <td style=\"text-align:center; font-weight:100\">\r\n            <label>Password:</label>                        \r\n            <input type=\"password\" [(ngModel)]=\"loginPassword\" id=\"USER_CONTROL_LOGIN_PASSWORD\">\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"text-align:center\">            \r\n            <button (click)=\"Login(loginUsername, loginPassword)\" id=\"hvJsLoginBtn\">Login</button>\t \r\n            <button (click)=\"Register()\" id=\"hvJsRegisterPanelBtn\">Register</button>\r\n        </td>\r\n    </tr>\r\n</table>","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\t\t\t\t\t \r\nimport { Session } from 'protractor';\r\nimport { ConstantsComponent } from '../common/constants.component';\r\nimport { SessionComponent } from '../common/session.component';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class LoginComponent {\t\t\r\n\tprivate baseUrl: string;\r\n\tpublic loginPassword;\r\n\tpublic loginUsername;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t\t\r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl();\r\n\t}\r\n\r\n\tpublic static IsLoggedIn(): boolean {\r\n\t\tvar token = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_TOKEN);\r\n\r\n\t\tif (token !== undefined && token !== null && token.length > 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\t\t\t \r\n\t}\r\n\r\n\tpublic Register() {\r\n\t\tthis.router.navigate(['/registration']);\t\r\n\t}\t\t\t\t\t\t\r\n\r\n\tpublic Login(loginUsername: string, loginPassword: string) {\r\n\t\tlet encodedUserValue = btoa(loginUsername);\r\n\t\tlet encodedPassValue = btoa(loginPassword);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\tconst url = this.baseUrl + '/Login/Login?'\r\n\t\t\t+ 'encodedUser=' + encodedUserValue\r\n\t\t\t+ '&encodedPass=' + encodedPassValue;\r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.post(\r\n\t\t\turl,\r\n\t\t\tnull,\r\n\t\t\t{ headers: headers }\t\t\t\t\t\t\t\t\t\t  \r\n\t\t).subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tif (data !== null && data !== undefined && data !== '') {\r\n\t\t\t\t\tlet token = JSON.stringify(data);\r\n\t\t\t\t\tSessionComponent.SessionSetValue(ConstantsComponent.SESSION_TOKEN, token);\r\n\t\t\t\t\tSessionComponent.SessionSetValue(ConstantsComponent.SESSION_USERNAME, loginUsername);\r\n\t\t\t\t\tthis.router.navigate(['/main']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Username and/or password is not correct.  Please try again');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","<h1>Angular 6 Type Script - Main</h1>\r\n<div style=\"text-align:center; width: 100%\">\t \t\r\n\t<button (click)=\"ShowMainMenu()\" id=\"btnMainMenu\">Menu</button>\r\n\t<div *ngFor=\"let bucketListItem of htmlTableWData\" id=\"bucketListItems\">\r\n\t\t<table border=\"1\">\r\n\t\t\t<tr>\t\t\t\t\t  \r\n\t\t\t   <td>{{bucketListItem.number}}</td> \r\n\t\t\t   <td>Name: {{bucketListItem.name}}</td> \r\n\t\t\t   <td>DateCreated: {{bucketListItem.dateCreated}}</td>\r\n\t\t\t   <td>BucketListItemType: {{bucketListItem.bucketListItemType}}</td>\r\n\t\t\t   <td>Completed: {{bucketListItem.completed}}</td>\r\n\t\t\t   <td>Latitude: {{bucketListItem.latitude}}</td>\r\n\t\t\t   <td>Longitude: {{bucketListItem.longitude}}</td>\t \r\n\t\t\t   <td>Latitude: {{bucketListItem.latitude}}</td>\r\n\t\t\t   <td>Longitude: {{bucketListItem.longitude}}</td>\t\r\n\t\t\t   <td>DbId: {{bucketListItem.databaseId}}</td>\r\n\t\t\t   <td>UserName: {{bucketListItem.userName}}</td>\r\n\t\t\t   <td>\r\n\t\t\t\t   \t<button (click)=\"FormEdit(bucketListItem)\" id=\"hvJsFormEditBtn\">Edit</button>\t  \r\n\t\t\t\t</td>\r\n\t\t\t   <td>\r\n\t\t\t\t   <button (click)=\"FormDelete(bucketListItem.databaseId)\" id=\"hvJsFormDeleteBtn\">Delete</button>\r\n\t\t\t   </td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n       ","﻿import { Injectable, Component, Inject, Input } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\nimport { Router } from '@angular/router';\r\nimport { SessionComponent } from '../common/session.component';\r\nimport { ConstantsComponent } from '../common/constants.component';\r\nimport { EditService } from '../edit/edit.service';\r\nimport { SortService } from '../sort/sort.service';\r\n\t \r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './main.component.html',\r\n\tstyleUrls: ['./main.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class MainComponent {\t\t\r\n\tprivate baseUrl: string;\r\n\tpublic htmlTableWData: any;\t\t\t\t   \r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router,\r\n\t\tprivate editService: EditService,\r\n\t\tprivate sortService: SortService\r\n\t) {\r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl();\r\n\t\tthis.LoadBucketListItems();\r\n\t}\r\n\r\n\tpublic FormEdit(bucketListItem) {\r\n\t\tthis.editService.setBucketListItem(bucketListItem);\r\n\t\tthis.router.navigate(['/edit']);\t\t\t\t\r\n\t};\r\n\r\n\tpublic FormDelete(databaseId) {\r\n\t\tlet userName = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_USERNAME);\r\n\t\tlet token = SessionComponent.SessionGetValue(ConstantsComponent.SESSION_TOKEN);\t\t   \r\n\r\n\t\tconst url = this.baseUrl + '/BucketListItem/DeleteBucketListItem?'\r\n\t\t\t+ 'dbId=' + databaseId\t\t   \r\n\t\t\t+ '&encodedUser=' + btoa(userName)\r\n\t\t\t+ '&encodedToken=' + btoa(token);\t\t\r\n\r\n\t\treturn this.http.delete(url)\r\n\t\t\t.subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tif (data && data === true) {\r\n\t\t\t\t\tthis.LoadBucketListItems();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO - handle error\r\n\t\t\t\t\talert('Delete failed');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t};\t\t\t\t\t\t\t\t\t\t\r\n\r\n\tpublic ShowMainMenu() {\r\n\t\tthis.router.navigate(['/menu']);\r\n\t}\t\t\t\t\t\r\n\r\n\tprivate LoadBucketListItems() {\r\n\t\tlet encodedUserName = btoa(SessionComponent.SessionGetValue(ConstantsComponent.SESSION_USERNAME));\r\n\t\tlet encodedToken = btoa(SessionComponent.SessionGetValue(ConstantsComponent.SESSION_TOKEN));\r\n\t\tlet encodedSortString = btoa(this.sortService.getSort());\r\n\r\n\t\tconst url = this.baseUrl + '/BucketListItem/GetBucketListItems?'\r\n\t\t\t+ 'encodedUserName=' + encodedUserName\r\n\t\t\t+ '&encoderedSortString=' + encodedSortString\r\n\t\t\t+ '&encodedToken=' + encodedToken;\r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.get(url).subscribe(\r\n\t\t\tbucketListItems => {\r\n\t\t\t\tbucketListItems = this.AddNumberColumn(bucketListItems);\r\n\t\t\t\tthis.htmlTableWData = bucketListItems;\r\n\t\t\t}  \r\n\t\t);\t   \r\n\t}\r\n\r\n\tprivate AddNumberColumn(bucketListData) {\t\t\r\n\t\tfor (let i = 0; i < bucketListData.length; i++) {\r\n\t\t\tbucketListData[i].number = i + 1;\r\n\t\t}\r\n\r\n\t\treturn bucketListData;\r\n\t}\r\n}\r\n","<h1>Angular 6 Type Script - Menu</h1>\r\n<table width=\"100%\">\r\n    <tr>\r\n        <td style=\"text-align:center\">\r\n\t\t\t<button (click)=\"AddBucketListItem()\" id=\"hvJsAddBucketListItemBtn\">Add</button>\r\n        </td>\r\n    </tr>\t   \r\n    <tr>\r\n        <td style=\"text-align:center\"> \r\n\t\t\t<button (click)=\"SortBucketListItem()\" id=\"hvJsSortBucketListItemBtn\">Sort</button>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"text-align:center\">\r\n\t\t\t<button (click)=\"RunAlgorithm()\" id=\"hvJsRunAlgorithmBtn\">Run Algorithm</button>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"text-align:center\"> \r\n\t\t\t<button (click)=\"LogOut()\" id=\"hvJsLogOutBtn\">Logout</button>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"text-align:center\">\r\n\t\t\t<button (click)=\"Cancel()\" id=\"hvJsCancelBtn\">Cancel</button>\r\n        </td>\r\n    </tr>\r\n</table>","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { SessionComponent } from '../common/session.component';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './menu.component.html',\r\n\tstyleUrls: ['./menu.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class MenuComponent {\t\t\r\n\tprivate baseUrl: string;\t \r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl(); \r\n\t}\r\n\r\n\tpublic AddBucketListItem() {\r\n\t\tthis.router.navigate(['/add']);\r\n\t};\r\n\r\n\tpublic SortBucketListItem() {\r\n\t\tthis.router.navigate(['/sort']);\r\n\t};\r\n\r\n\tpublic RunAlgorithm() {\r\n\t\talert('RunAlgorithm() clicked');\r\n\t};\r\n\r\n\tpublic LogOut() {\r\n\t\tSessionComponent.SessionClearStorage();\r\n\t\tthis.router.navigate(['/login']);\r\n\t};\r\n\r\n\tpublic Cancel() {\r\n\t\tif (LoginComponent.IsLoggedIn() === true) {\r\n\t\t\tthis.router.navigate(['/main']);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t}\t\r\n\t};\r\n}\r\n","<h1>Angular 6 Type Script - Registration</h1>\r\n<table width=\"100%\">\r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t\r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>User Name:</label>\r\n\t\t\t<input type=\"text\" [(ngModel)]=\"username\" id=\"USER_CONTROL_REGISTRATION_USERNAME\">\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t\t\r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>Email:</label>\r\n\t\t\t<input type=\"text\" [(ngModel)]=\"email\" id=\"USER_CONTROL_REGISTRATION_EMAIL\">\r\n\t\t</td>\r\n\t</tr> \r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t  \r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>Password:</label> \r\n\t\t\t<input type=\"password\" [(ngModel)]=\"password\" id=\"USER_CONTROL_REGISTRATION_PASSWORD\">\r\n\t\t</td>\r\n\t</tr>\r\n\t<tr> \t\t\t\t\t\t\t\t\t\t\t\t \r\n        <td style=\"text-align:center\"> \r\n\t\t\t<label>Confirm Password:</label> \r\n\t\t\t<input type=\"password\" [(ngModel)]=\"confirmPassword\" id=\"USER_CONTROL_REGISTRATION_CONFIRM_PASSWORD\">\r\n        \r\n\t\t</td>\r\n\t</tr>\r\n\t<tr>\t\t\t\t\t\t\t\t\t\t\r\n        <td style=\"text-align:center\"> \r\n\t\t    <button (click)=\"Register(username, email, password, confirmPassword)\" id=\"hvJsRegisterBtn\">Register</button>\r\n            <button (click)=\"Cancel()\" id=\"hvJsRegisterCancelBtn\">Cancel</button>\t       \r\n\t\t</td>\r\n\t</tr>\r\n</table>","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './registration.component.html',\r\n\tstyleUrls: ['./registration.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class RegistrationComponent {\r\n\tprivate baseUrl: string;\r\n\tpublic username;\r\n\tpublic email;\r\n\tpublic password;\r\n\tpublic confirmPassword;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router\r\n\t) {\t\t\t\t\t\t\t\t\t\t   \r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl();\r\n\t}\t\t\t\t\r\n\r\n\tpublic Cancel() {\t\t\t\t\t\t  \r\n\t\tthis.router.navigate(['/login']);\r\n\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\tpublic Register(\r\n\t\tusername: string,\r\n\t\temail: string,\r\n\t\tpassword: string,\r\n\t\tconfirmPassword: string\r\n\t) {\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t// TODO - handle registration validation\r\n\t\tlet encodedUserValue = btoa(username);\r\n\t\tlet encodedPassValue = btoa(password);\r\n\t\tlet encodedEmailValue = btoa(email);\r\n\r\n\t\tconst url = this.baseUrl + '/Registration/Registration?'\r\n\t\t\t+ 'encodedUser=' + encodedUserValue\r\n\t\t\t+ '&encodedPass=' + encodedPassValue\r\n\t\t\t+ '&encodedEmail=' + encodedEmailValue;\r\n\r\n\t\tconst headers = new HttpHeaders()\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.set('Accept', 'application/json');\r\n\r\n\t\treturn this.http.post(\r\n\t\t\turl,\r\n\t\t\tnull,\r\n\t\t\t{ headers: headers }\r\n\t\t).subscribe(\r\n\t\t\tdata => {\r\n\t\t\t\tif (data !== null && data !== undefined && data !== '') {\r\n\t\t\t\t\tthis.router.navigate(['/login']);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Registration failed');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\talert('Error: ' + error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","<table width=\"100%\">\r\n    <tr>\r\n        <td style=\"text-align:center\">\t\t  \r\n\t\t\t<button (click)=\"Sort('ListItemName')\" id=\"hvJsSortItemBtn\">Name</button>\r\n        </td>\r\n    </tr>\t   \r\n\t<tr>\r\n        <td style=\"text-align:center\">\t\t  \r\n\t\t\t<button (click)=\"Sort('Created')\" id=\"hvJsSortCreatedBtn\">Created</button>\r\n        </td>\r\n    </tr>\t\t   \r\n\t<tr>\r\n        <td style=\"text-align:center\">\t\t  \r\n\t\t\t<button (click)=\"Sort('Category')\" id=\"hvJsSortCategoryBtn\">Category</button>\r\n        </td>\r\n    </tr>\t   \r\n\t<tr>\r\n        <td style=\"text-align:center\">\t\t  \r\n\t\t\t<button (click)=\"Sort('Achieved')\" id=\"hvJsSortAchievedBtn\">Achieved</button>\r\n        </td>\r\n    </tr> \t\r\n\t<tr>      \t\t\t         \r\n\t\t<td style=\"text-align:center; font-weight:100\">\r\n            <label>Completed:</label>\r\n\t\t\t<input type=\"checkbox\" [(ngModel)]=\"descOrder\" id=\"hvJsDescCheckbox\">\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"text-align:center\">\t\t\t\t\t\t\t\t\t\r\n\t\t\t<button (click)=\"Cancel()\" id=\"hvJsCancelBtn\">Cancel</button>\r\n        </td>\r\n    </tr>\r\n</table>","﻿import { Injectable, Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { SessionComponent } from '../common/session.component';\r\nimport { UtilitiesComponent } from '../common/utilities.component';\r\nimport { SortService } from './sort.service';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './sort.component.html',\r\n\tstyleUrls: ['./sort.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class SortComponent {\t\t\r\n\tprivate baseUrl: string;\t\r\n\tpublic descOrder: boolean;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate router: Router,\r\n\t\tprivate sortService: SortService\r\n\t) {\r\n\t\tthis.baseUrl = UtilitiesComponent.GetBaseUrl(); \r\n\t}\r\n\r\n\tpublic Sort(sortColumn) { \r\n\t\tlet sort = 'order by ' + sortColumn;\r\n\r\n\t\tif (this.descOrder === true) {\r\n\t\t\tsort += ' desc';\r\n\t\t}\r\n\r\n\t\tthis.sortService.setSort(sort);\r\n\t\tthis.router.navigate(['/main']);\r\n\t};\r\n\t\t\t\t\t\t \r\n\tpublic Cancel() {\r\n\t\tthis.sortService.setSort('');\r\n\r\n\t\tif (LoginComponent.IsLoggedIn() === true) {\r\n\t\t\tthis.router.navigate(['/main']);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t}\t\r\n\t};\r\n}\r\n","﻿import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SortService {\r\n\tpublic sort: string;\r\n\r\n\tconstructor() {\r\n\t\tthis.sort = '';\r\n\t}\r\n\r\n\tsetSort(sort: string) {\r\n\t\tthis.sort = sort;\r\n\t}\r\n\r\n\tgetSort() {\r\n\t\treturn this.sort;\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}